name: Orders Service CI/CD - Test Branch

on:
  pull_request:
    branches: [test]
    paths: ["orders/**"]

jobs:
  build-and-cloudbuild:
    name: Build & Push with Google Cloud Build
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: "postgresql://postgres:5533@localhost:5432/orders_test"
      PORT: 4000
      TEST_EMAIL: "Wd7w9@example.com"
      JWT_KEY: "TmV3U2VjcmV0S2V5Rm9ySldUU2lnbmluZ1B1cnBvc2VzMTIzNDU2Nzg="
      NODE_ENV: "test"
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
      KAFKAJS_NO_PARTITIONER_WARNING: 1
      DATABASE_URL_TEST: "file:./test.db"

    defaults:
      run:
        working-directory: orders

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: orders/package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm run test:ci

      - name: Set up Google Cloud CLI
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: levomart

      - name: Extract short SHA
        id: vars
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Submit Cloud Build (Async)
        id: cloudbuild
        run: |
          BUILD_ID=$(gcloud builds submit \
            --project=levomart \
            --config=../k8s/orders/cloudBuild.yaml \
            --async \
            --format='value(metadata.build.id)')

      - name: Echo Done
        run: echo "Done with orders Service CI/CD for Test Branch"

      # - name: Wait for Cloud Build to Finish
      #   run: |
      #     echo "‚è≥ Waiting for build $BUILD_ID to complete..."

      #     for i in {1..60}; do
      #       STATUS=$(gcloud builds describe $BUILD_ID --project=levomart --format='value(status)')
      #       echo "üîÅ Build status: $STATUS"

      #       if [[ "$STATUS" == "SUCCESS" ]]; then
      #         echo "‚úÖ Build succeeded!"
      #         exit 0
      #       elif [[ "$STATUS" == "FAILURE" || "$STATUS" == "CANCELLED" || "$STATUS" == "TIMEOUT" ]]; then
      #         echo "‚ùå Build failed with status: $STATUS"
      #         exit 1
      #       fi

      #       echo "‚è± Sleeping for 20 seconds..."
      #       sleep 20
      #     done

      #     echo "‚ùå Timed out waiting for build to finish."
      #     exit 1

      # - name: Submit Cloud Build using external file
      #   run: |
      #     gcloud builds submit \
      #       --project=levomart \
      #       --config=../k8s/orders/cloudBuild.yaml

      # - name: Submit Cloud Build
      #   run: |
      #     gcloud builds submit auth \
      #       --tag=asia-south1-docker.pkg.dev/levomart/levomart-repo/auth:$SHORT_SHA \
      #       --project=levomart
