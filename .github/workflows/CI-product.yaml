name: CI for Product Service

on:
  # push:
  #   branches: [dev]
  #   paths: ["product/**"]
  pull_request:
    branches:
      - dev
    paths:
      - "product/**"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JWT_KEY: "TmV3U2VjcmV0S2V5Rm9ySldUU2lnbmluZ1B1cnBvc2VzMTIzNDU2Nzg="
      KAFKA_CLIENT_ID: "product-service"
      KAFKA_BROKERS_ADDRESS: "localhost:9092"
      KAFKA_TOPIC_PRODUCT_CREATED_SCHEMA_PATH: "../../../shared-schemas/product/product-created.schema.json"
      KAFKA_TOPIC_PRODUCT_UPDATED_SCHEMA_PATH: "../../../shared-schemas/product/product-updated.schema.json"
      KAFKA_TOPIC_ORDER_CREATED_SCHEMA_PATH: "../../../shared-schemas/order/order-created.schema.json"
      KAFKA_TOPIC_ORDER_UPDATED_SCHEMA_PATH: "../../../shared-schemas/order/order-updated.schema.json"
      PORT: 4000
      NODE_ENV: "test"
      KAFKAJS_NO_PARTITIONER_WARNING: 1
    defaults:
      run:
        working-directory: product
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: product/package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm run test:ci

      # - name: Upload Coverage to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
